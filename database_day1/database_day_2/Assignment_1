-- Query 1

create table restaurant (id integer,
 name varchar(20),
  description varchar(100),
  rating decimal,
  telephone char(10),
  hours varchar(100));


  create table address(id integer,
  street_number varchar(10),
  street_name varchar(20),
  city varchar(20),
  state varchar(15),
  google_map_link varchar(50)
  );

--Query 2

alter table restaurant add constraint pri1_const primary key (id);

alter table address add constraint pri2_const primary key (id);


  select 
  constraint_name, table_name, column_name from
  information_schema.key_column_usage
  where table_name='restaurant';

  select 
  constraint_name, table_name, column_name from
  information_schema.key_column_usage
  where table_name='address';

--Query 3

  create table category (id char(2) , name varchar(20), description varchar(200));

  alter table category add constraint pri3_const primary key (id);

  select 
  constraint_name, table_name, column_name from
  information_schema.key_column_usage
  where table_name='category';

--Query 4

  create table dish(id integer, name varchar(50),description varchar(200),hot_and_spicy boolean);

  alter table  dish add constraint pri4_const primary key (id);

  select 
  constraint_name, table_name, column_name from
  information_schema.key_column_usage
  where table_name='dish';

--Query 5

  create table review(id integer, rating decimal, description varchar(100),
  date date);
  
  alter table review add constraint pri5_const primary key (id);

  select 
  constraint_name, table_name, column_name from
  information_schema.key_column_usage
  where table_name='review';

--Query 6

  alter table address add column f1_k integer unique references restaurant(id);

--Query 7

  alter table review add column restaurant_id integer references restaurant(id);

--Query 8

create table categories_dishes(
category_cross char(2) references category(id),
dish_cross integer references dish(id),
price money,
primary key(category_cross,dish_cross)
);

--Query 9

INSERT INTO restaurant VALUES (
  1,
  'Bytes of China',
  'Delectable Chinese Cuisine',
  3.9,
  '6175551212',
  'Mon - Fri 9:00 am to 9:00 pm, Weekends 10:00 am to 11:00 pm'
);

/* 
 *--------------------------------------------
 Insert values for address
 *--------------------------------------------
 */
INSERT INTO address VALUES (
  1,
  '2020',
  'Busy Street',
  'Chinatown',
  'MA',
  'http://bit.ly/BytesOfChina',
  1
);

/* 
 *--------------------------------------------
 Insert values for review
 *--------------------------------------------
 */
INSERT INTO review VALUES (
  1,
  5.0,
  'Would love to host another birthday party at Bytes of China!',
  '05-22-2020',
  1
);

INSERT INTO review VALUES (
  2,
  4.5,
  'Other than a small mix-up, I would give it a 5.0!',
  '04-01-2020',
  1
);

INSERT INTO review VALUES (
  3,
  3.9,
  'A reasonable place to eat for lunch, if you are in a rush!',
  '03-15-2020',
  1
);

/* 
 *--------------------------------------------
 Insert values for category
 *--------------------------------------------
 */
INSERT INTO category VALUES (
  'C',
  'Chicken',
  null
);

INSERT INTO category VALUES (
  'LS',
  'Luncheon Specials',
  'Served with Hot and Sour Soup or Egg Drop Soup and Fried or Steamed Rice  between 11:00 am and 3:00 pm from Monday to Friday.'
);

INSERT INTO category VALUES (
  'HS',
  'House Specials',
  null
);

/* 
 *--------------------------------------------
 Insert values for dish
 *--------------------------------------------
 */
INSERT INTO dish VALUES (
  1,
  'Chicken with Broccoli',
  'Diced chicken stir-fried with succulent broccoli florets',
  false
);

INSERT INTO dish VALUES (
  2,
  'Sweet and Sour Chicken',
  'Marinated chicken with tangy sweet and sour sauce together with pineapples and green peppers',
  false
);

INSERT INTO dish VALUES (
  3,
  'Chicken Wings',
  'Finger-licking mouth-watering entree to spice up any lunch or dinner',
  true
);

INSERT INTO dish VALUES (
  4,
  'Beef with Garlic Sauce',
  'Sliced beef steak marinated in garlic sauce for that tangy flavor',
  true
);

INSERT INTO dish VALUES (
  5,
  'Fresh Mushroom with Snow Peapods and Baby Corns',
  'Colorful entree perfect for vegetarians and mushroom lovers',
  false
);

INSERT INTO dish VALUES (
  6,
  'Sesame Chicken',
  'Crispy chunks of chicken flavored with savory sesame sauce',
  false
);

INSERT INTO dish VALUES (
  7,
  'Special Minced Chicken',
  'Marinated chicken breast sauteed with colorful vegetables topped with pine nuts and shredded lettuce.',
  false
);

INSERT INTO dish VALUES (
  8,
  'Hunan Special Half & Half',
  'Shredded beef in Peking sauce and shredded chicken in garlic sauce',
  true
);

/*
 *--------------------------------------------
 Insert valus for cross-reference table, categories_dishes
 *--------------------------------------------
 */
INSERT INTO categories_dishes VALUES (
  'C',
  1,
  6.95
);

INSERT INTO categories_dishes VALUES (
  'C',
  3,
  6.95
);

INSERT INTO categories_dishes VALUES (
  'LS',
  1,
  8.95
);

INSERT INTO categories_dishes VALUES (
  'LS',
  4,
  8.95
);

INSERT INTO categories_dishes VALUES (
  'LS',
  5,
  8.95
);

INSERT INTO categories_dishes VALUES (
  'HS',
  6,
  15.95
);

INSERT INTO categories_dishes VALUES (
  'HS',
  7,
  16.95
);

INSERT INTO categories_dishes VALUES (
  'HS',
  8,
  17.95
);

--Query 10

select name, street_number, street_name, telephone from restaurant, address;

--Query 11

select max(rating) as best_rating from review;

--Query 12

select dish.name as dish_name,categories_dishes.price, category.name as category from dish,categories_dishes,category where dish.id=categories_dishes.dish_cross and categories_dishes.category_cross=category.id order by dish.name;

--Query13

select category.name as category, dish.name as dish_name, categories_dishes.price from category,dish,categories_dishes where categories_dishes.dish_cross=dish.id and categories_dishes.category_cross=category.id order by category.name;

--Query 14

select dish.name as spicy_dish_name, category.name as category, categories_dishes.price as price from
dish, category, categories_dishes where categories_dishes.dish_cross=dish.id and categories_dishes.category_cross=category.id and hot_and_spicy =true;

--Query 15

select dish_cross,count(dish_cross) as dish_count from categories_dishes group by 1 order by 1;

--Query 16

select dish_cross, count(dish_cross) as dish_count from categories_dishes group by 1 having count(dish_cross) > 1 order by 1;

--Query 17

select dish.name as dish_name, dish_cross, count(dish_cross) as dish_count from dish, categories_dishes where dish.id = categories_dishes.dish_cross group by 1,2 order by 3;

--Query 18

select dish.name as dish_name, dish_cross, count(dish_cross) as dish_count from dish, categories_dishes where dish.id = categories_dishes.dish_cross group by 1,2 having count(dish_cross)>1 order by 3;

--Query 19

select rating, description from review where rating = (select max(rating) from review);
